WCF.Todo={},WCF.Todo.Preview=WCF.Popover.extend({_proxy:null,_todoProfile:{},init:function(){this._super(".todoLink"),this._proxy=new WCF.Action.Proxy({showLoadingOverlay:!1})},_loadContent:function(){var t=$("#"+this._activeElementID),e=t.data("todoID");if(this._todoProfile[e])this._insertContent(this._activeElementID,this._todoProfile[e],!0);else{this._proxy.setOption("data",{actionName:"getToDoProfile",className:"wcf\\data\\todo\\ToDoAction",objectIDs:[e]});var o=this._activeElementID,i=this;this._proxy.setOption("success",function(t){i._todoProfile[e]=t.returnValues.template,i._insertContent(o,t.returnValues.template,!0)}),this._proxy.setOption("failure",function(t){return i._todoProfile[e]=t.message,i._insertContent(o,t.message,!0),!1}),this._proxy.sendRequest()}}}),WCF.Todo.Like=WCF.Like.extend({_getContainers:function(){return $("article.message:not(.messageCollapsed)")},_getObjectID:function(t){return this._containers[t].data("todoID")},_getWidgetContainer:function(t){return this._containers[t].find(".messageHeader")},_buildWidget:function(t,e,o,i,s){var a=this._getWidgetContainer(t);if(this._canLike){var n=this._containers[t].find(".smallButtons");e.insertBefore(n.find(".toTopLink")),o.insertBefore(n.find(".toTopLink")),o.find("a").addClass("button"),e.find("a").addClass("button")}s&&(s.appendTo(this._containers[t].find(".messageBody > .messageFooter")),s.addClass("messageFooterNote")),a.find(".permalink").after(i)},_setActiveState:function(t,e,o){t=t.find(".button").removeClass("active"),e=e.find(".button").removeClass("active"),1==o?t.addClass("active"):-1==o&&e.addClass("active")},_addWidget:function(){}}),WCF.Todo.UpdateHandler=Class.extend({_todos:{},init:function(){var t=this;$(".jsTodo").each($.proxy(function(e,o){var i=$(o);t._todos[i.data("todoID")]=i},this))},update:function(t,e,o){if(!this._todos[t])return void console.debug("[WCF.Todo.UpdateHandler] Unknown todo id "+t);for(var i in e)this._updateProperty(t,i,e[i]);o!==!1&&WCF.Clipboard.reload()},_updateProperty:function(t,e,o){switch(e){case"isDisabled":o?this._disable(t):this._enable(t);break;case"deleted":this._delete(t,o);break;case"deleteNote":this._deleteNote(t,o);break;case"isDeleted":o?this._trash(t):this._restore(t);break;default:this._handleCustomProperty(t,e,o)}WCF.Clipboard.reload()},_handleCustomProperty:function(t,e,o){this._todos[t].trigger("todoUpdateHandlerProperty",[t,e,o])},_enable:function(t){this._todos[t].data("isDisabled",0)},_disable:function(t){this._todos[t].data("isDisabled",1)},_trash:function(t){this._todos[t].data("isDeleted",1)},_delete:function(){},_deleteNote:function(){},_restore:function(t){this._todos[t].data("isDeleted",0)},getValue:function(t,e){if(!this._todos[t])return void console.debug("[WCF.Todo.UpdateHandler] Unknown todo id "+t);switch(e){case"isDisabled":case"isDeleted":return this._todos[t].data(e)}}}),WCF.Todo.InlineEditor=WCF.InlineEditor.extend({_environment:"todo",_permissions:{},_updateHandler:null,_setOptions:function(){this._environment="todo",this._options=[{label:WCF.Language.get("wcf.todo.edit.enable"),optionName:"enable"},{label:WCF.Language.get("wcf.todo.edit.disable"),optionName:"disable"},{label:WCF.Language.get("wcf.todo.edit.trash"),optionName:"trash"},{label:WCF.Language.get("wcf.todo.edit.restore"),optionName:"restore"},{label:WCF.Language.get("wcf.todo.edit.delete"),optionName:"delete"},{optionName:"divider"},{label:WCF.Language.get("wcf.todo.edit"),optionName:"edit",isQuickOption:!0}]},setUpdateHandler:function(t){this._updateHandler=t},_getTriggerElement:function(t){return t.find(".jsTodoInlineEditor")},_show:function(t){var e=$(t.currentTarget).data("elementID"),o=null;if(!this._dropdowns[e]){o=this._getTriggerElement(this._elements[e]).addClass("dropdownToggle");var i=o.parent().addClass("dropdown");this._dropdowns[e]=$('<ul class="dropdownMenu" />').insertAfter(o),WCF.Dropdown.registerCallback(i.wcfIdentify(),$.proxy(function(t){WCF.Dropdown.getDropdown(t).parents(".messageOptions").toggleClass("forceOpen")},this))}return this._super(t),null!==o&&WCF.Dropdown.initDropdown(o,!0),!1},_validate:function(t,e){var o=$("#"+t).data("todoID");switch(e){case"enable":return this._getPermission("canEnableTodo")?this._updateHandler.getValue(o,"isDeleted")?!1:this._updateHandler.getValue(o,"isDisabled")?!0:!1:!1;case"disable":return this._getPermission("canEnableTodo")?this._updateHandler.getValue(o,"isDeleted")?!1:this._updateHandler.getValue(o,"isDisabled")?!1:!0:!1;case"trash":return this._getPermission("canDeleteTodo")?this._updateHandler.getValue(o,"isDeleted")?!1:!0:!1;case"delete":return this._getPermission("canDeleteTodoCompletely")&&this._updateHandler.getValue(o,"isDeleted")?!0:!1;case"restore":return this._getPermission("canRestoreTodo")&&this._updateHandler.getValue(o,"isDeleted")?!0:!1;case"edit":return this._elements[t].data("canEdit")}return!1},_execute:function(t,e){if(!this._validate(t,e))return!1;switch(e){case"enable":case"disable":this._updateTodo(t,e,{isDisabled:"enable"==e?0:1});break;case"delete":WCF.System.Confirmation.show(WCF.Language.get("wcf.todo.confirmDelete"),$.proxy(function(o){"confirm"==o&&this._updateTodo(t,e,{deleted:1})},this));break;case"restore":this._updateTodo(t,e,{isDeleted:0});break;case"trash":WCF.System.Confirmation.show(WCF.Language.get("wcf.todo.confirmTrash"),$.proxy(function(o){"confirm"==o&&this._updateTodo(t,e,{isDeleted:1,reason:$("#wcfSystemConfirmationContent").find("textarea").val()})},this),{},$("<fieldset><dl><dt>"+WCF.Language.get("wcf.todo.confirmTrash.reason")+'</dt><dd><textarea cols="40" rows="4" /></dd></dl></fieldset>'));break;case"edit":window.location=this._elements[t].data("editUrl");break;default:return!1}return!0},_updateTodo:function(t,e,o){var i=this._elements[t].data("todoID");"delete"==e?new WCF.Action.Proxy({autoSend:!0,data:{actionName:"delete",className:"wcf\\data\\todo\\ToDoAction",objectIDs:[i]},success:$.proxy(function(t){this._updateHandler.update(i,t.returnValues.todoData[i])},this)}):(this._updateData.push({data:o,elementID:t,optionName:e}),this._proxy.setOption("data",{actionName:e,className:"wcf\\data\\todo\\ToDoAction",objectIDs:[this._elements[t].data("todoID")],parameters:{data:o}}),this._proxy.sendRequest())},_updateState:function(){this._notification.show();for(var t=0,e=this._updateData.length;e>t;t++){var o=this._updateData[t],i=$("#"+o.elementID).data("todoID");this._updateHandler.update(i,o.data)}},_success:function(t,e,o){this._super(t,e,o);for(var i in t.returnValues.todoData)t.returnValues.todoData[i].deleteNote&&this._updateHandler.update(i,t.returnValues.todoData[i])},setPermissions:function(t){for(var e in t)this._permissions[e]=t[e]},_getPermission:function(t){return this._permissions[t]?this._permissions[t]:0},setEnvironment:function(t){"list"!=t&&(t="todo"),this._environment=t}}),WCF.Todo.UpdateHandler.List=WCF.Todo.UpdateHandler.extend({_enable:function(t){this._super(t),this._todos[t].removeClass("messageDisabled")},_disable:function(t){this._super(t),this._todos[t].addClass("messageDisabled")},_trash:function(t){this._super(t),this._todos[t].addClass("messageDeleted")},_delete:function(t){this._todos[t].remove(),delete this._todos[t],WCF.Clipboard.reload()},_deleteNote:function(t,e){$('<p class="todoDeleteNote messageFooterNote">'+e+"</p>").appendTo(this._todos[t].find(".messageFooter"))},_restore:function(t){this._super(t),this._todos[t].removeClass("messageDeleted"),this._todos[t].find(".messageFooter > .todoDeleteNote").remove()}}),WCF.Todo.UpdateHandler.Todo=WCF.Todo.UpdateHandler.extend({_enable:function(t){this._super(t),$(".todoContainer").removeClass("todoDisabled"),$(".sidebar").removeClass("disabled")},_disable:function(t){this._super(t),$(".sidebar").addClass("disabled")},_trash:function(t){this._super(t),$(".sidebar").addClass("deleted")},_delete:function(t,e){window.location=e},_deleteNote:function(t,e){$('<fieldset class="todoDeleteNote"><small>'+e+"</small></fieldset>").appendTo($(".sidebar > div"))},_restore:function(t){this._super(t),$(".todoContainer").removeClass("todoDeleted"),$(".sidebar").removeClass("deleted"),$(".sidebar > div > .todoDeleteNote").remove()}}),WCF.Todo.Clipboard=Class.extend({_updateHandler:null,init:function(updateHandler){this._updateHandler=updateHandler,$(".jsClipboardEditor").each($.proxy(function(index,container){var $container=$(container),$types=eval($container.data("types"));return WCF.inArray("de.mysterycode.wcf.toDo.toDo",$types)?($container.on("clipboardAction",$.proxy(this._execute,this)),$container.on("clipboardActionResponse",$.proxy(this._evaluateResponse,this)),!1):void 0},this))},_execute:function(t,e,o,i){if("de.mysterycode.wcf.toDo.toDo"===e)switch(o){case"de.mysterycode.wcf.toDo.toDo.trash":WCF.System.Confirmation.show(WCF.Language.get("wcf.todo.confirmTrash"),$.proxy(this._trash,this,i),{},$("<fieldset><dl><dt>"+WCF.Language.get("wcf.todo.confirmTrash.reason")+'</dt><dd><textarea cols="40" rows="4" /></dd></dl></fieldset>'))}},_trash:function(t,e){if("confirm"==e){var o=$("#wcfSystemConfirmationContent").find("textarea").val();new WCF.Action.Proxy({autoSend:!0,data:{actionName:"trash",className:"wcf\\data\\todo\\ToDoAction",objectIDs:t.objectIDs,parameters:{data:{reason:o}}},success:$.proxy(function(t){this._evaluateResponse(null,t,"de.mysterycode.wcf.toDo.toDo","de.mysterycode.wcf.toDo.toDo.trash",null)},this)})}},_evaluateResponse:function(t,e,o){if("de.mysterycode.wcf.toDo.toDo"===o&&e.returnValues.todoData&&$.getLength(e.returnValues.todoData))for(var i in e.returnValues.todoData)this._updateHandler.update(i,e.returnValues.todoData[i])}}),WCF.Todo.Participate=Class.extend({_buttons:{},_buttonSelector:"",_dialog:null,_notification:null,_objectID:0,_userID:0,_proxy:null,init:function(t){this._buttonSelector=t,this._buttons={},this._notification=null,this._objectID=0,this._userID=0,this._proxy=new WCF.Action.Proxy({success:$.proxy(this._success,this)}),this._initButtons(),WCF.DOMNodeInsertedHandler.addCallback("WCF.Todo.Participate",$.proxy(this._initButtons,this))},_initButtons:function(){var t=this;$(this._buttonSelector).each(function(e,o){var i=$(o),s=i.wcfIdentify();t._buttons[s]||(t._buttons[s]=i,i.click($.proxy(t._click,t)))})},_click:function(t){this._objectID=$(t.currentTarget).data("objectID"),this._userID=$(t.currentTarget).data("userID"),this._showDialog(),this._dialog.find(".jsSubmitParticipate").click($.proxy(this._submit,this))},_success:function(t){t.returnValues.submitted&&(null===this._notification&&(this._notification=new WCF.System.Notification(WCF.Language.get("wcf.toDo.task.participate.success"))),this._dialog.wcfDialog("close"),this._notification.show(),setTimeout(function(){location.reload()},1e3))},_showDialog:function(){null===this._dialog&&(this._dialog=$("#participateDialog"),this._dialog.length||(this._dialog=$('<div id="participateDialog" />').hide().appendTo(document.body))),$html=WCF.Language.get("wcf.toDo.task.participate.shure")+'<div class="formSubmit"><button class="jsSubmitParticipate buttonPrimary" accesskey="s">'+WCF.Language.get("wcf.global.button.submit")+"</button></div>",this._dialog.html($html).wcfDialog({title:WCF.Language.get("wcf.toDo.task.participate")}).wcfDialog("render")},_submit:function(){this._proxy.setOption("data",{actionName:"participate",className:"wcf\\data\\todo\\ToDoAction",parameters:{userID:this._userID,objectID:this._objectID}}),this._proxy.sendRequest()}}),WCF.Todo.MarkSolved=Class.extend({_buttons:{},_buttonSelector:"",_dialog:null,_notification:null,_objectID:0,_userID:0,_proxy:null,init:function(t){this._buttonSelector=t,this._buttons={},this._notification=null,this._objectID=0,this._userID=0,this._proxy=new WCF.Action.Proxy({success:$.proxy(this._success,this)}),this._initButtons(),WCF.DOMNodeInsertedHandler.addCallback("WCF.Todo.MarkSolved",$.proxy(this._initButtons,this))},_initButtons:function(){var t=this;$(this._buttonSelector).each(function(e,o){var i=$(o),s=i.wcfIdentify();t._buttons[s]||(t._buttons[s]=i,i.click($.proxy(t._click,t)))})},_click:function(t){this._objectID=$(t.currentTarget).data("objectID"),this._userID=$(t.currentTarget).data("userID"),this._showDialog(),this._dialog.find(".jsSubmitMarkSolved").click($.proxy(this._submit,this))},_success:function(t){t.returnValues.success&&(null===this._notification&&(this._notification=new WCF.System.Notification(WCF.Language.get("wcf.toDo.task.solve.success"))),this._dialog.wcfDialog("close"),this._notification.show(),setTimeout(function(){location.reload()},1e3))},_showDialog:function(){null===this._dialog&&(this._dialog=$("#markSolvedDialog"),this._dialog.length||(this._dialog=$('<div id="markSolvedDialog" />').hide().appendTo(document.body))),$html=WCF.Language.get("wcf.toDo.task.solve.shure")+'<div class="formSubmit"><button class="jsSubmitMarkSolved buttonPrimary" accesskey="s">'+WCF.Language.get("wcf.global.button.submit")+"</button></div>",this._dialog.html($html).wcfDialog({title:WCF.Language.get("wcf.toDo.task.solve")}).wcfDialog("render")},_submit:function(){this._proxy.setOption("data",{actionName:"editStatus",className:"wcf\\data\\todo\\ToDoAction",parameters:{userID:this._userID,objectID:this._objectID,status:3}}),this._proxy.sendRequest()}});